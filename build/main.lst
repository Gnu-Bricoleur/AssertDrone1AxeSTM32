ARM GAS  /tmp/ccEUOGm2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text._Error_Handler,"ax",%progbits
  21              		.align	2
  22              		.global	_Error_Handler
  23              		.thumb
  24              		.thumb_func
  26              	_Error_Handler:
  27              	.LFB125:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** //SCL -> PB6
   3:Src/main.c    **** //SDA -> PB7
   4:Src/main.c    **** 
   5:Src/main.c    **** //PWM1 -> PA8
   6:Src/main.c    **** //PWM2 -> PA9
   7:Src/main.c    **** 
   8:Src/main.c    **** 
   9:Src/main.c    **** 
  10:Src/main.c    **** /**
  11:Src/main.c    ****   ******************************************************************************
  12:Src/main.c    ****   * @file           : main.c
  13:Src/main.c    ****   * @brief          : Main program body
  14:Src/main.c    ****   ******************************************************************************
  15:Src/main.c    ****   ** This notice applies to any and all portions of this file
  16:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  17:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  18:Src/main.c    ****   * inserted by the user or by software development tools
  19:Src/main.c    ****   * are owned by their respective copyright owners.
  20:Src/main.c    ****   *
  21:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  22:Src/main.c    ****   *
  23:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  24:Src/main.c    ****   * are permitted provided that the following conditions are met:
  25:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  26:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  27:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  28:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  29:Src/main.c    ****   *      and/or other materials provided with the distribution.
  30:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
ARM GAS  /tmp/ccEUOGm2.s 			page 2


  31:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  32:Src/main.c    ****   *      without specific prior written permission.
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  37:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  38:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  39:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  40:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  41:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  42:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  43:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  44:Src/main.c    ****   *
  45:Src/main.c    ****   ******************************************************************************
  46:Src/main.c    ****   */
  47:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  48:Src/main.c    **** #include "main.h"
  49:Src/main.c    **** #include "stm32f4xx_hal.h"
  50:Src/main.c    **** #include "i2c.h"
  51:Src/main.c    **** #include "tim.h"
  52:Src/main.c    **** #include "usart.h"
  53:Src/main.c    **** #include "gpio.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** #include "sd_hal_mpu6050.h"
  57:Src/main.c    **** /* USER CODE END Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE BEGIN PV */
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** SD_MPU6050 mpu1;
  64:Src/main.c    **** /* USER CODE END PV */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** void SystemClock_Config(void);
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE BEGIN PFP */
  70:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE BEGIN 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** /* USER CODE END 0 */
  77:Src/main.c    **** 
  78:Src/main.c    **** /**
  79:Src/main.c    ****   * @brief  The application entry point.
  80:Src/main.c    ****   *
  81:Src/main.c    ****   * @retval None
  82:Src/main.c    ****   */
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
  86:Src/main.c    ****     SD_MPU6050_Result result ;
  87:Src/main.c    **** 	uint8_t mpu_ok[15] = {"MPU WORK FINE\n"};
ARM GAS  /tmp/ccEUOGm2.s 			page 3


  88:Src/main.c    ****     uint8_t mpu_not[17] = {"MPU NOT WORKING\n"};
  89:Src/main.c    ****     int16_t somme_erreur = 0;
  90:Src/main.c    ****     int16_t delta_erreur = 0;
  91:Src/main.c    ****     int16_t delta_erreur_prec = 0;
  92:Src/main.c    ****     int16_t cmd = 0;
  93:Src/main.c    ****     float kp = 0.02;           // Coefficient proportionnel
  94:Src/main.c    ****     float ki = 0.0;           // Coefficient intégrateur
  95:Src/main.c    ****     float kd = 0.01;           // Coefficient dérivateur
  96:Src/main.c    ****     int moteur1 = 0;
  97:Src/main.c    ****     int moteur2 = 0;
  98:Src/main.c    ****   /* USER CODE END 1 */
  99:Src/main.c    **** 
 100:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 103:Src/main.c    ****   HAL_Init();
 104:Src/main.c    **** 
 105:Src/main.c    ****   /* USER CODE BEGIN Init */
 106:Src/main.c    **** 
 107:Src/main.c    ****   /* USER CODE END Init */
 108:Src/main.c    **** 
 109:Src/main.c    ****   /* Configure the system clock */
 110:Src/main.c    ****   SystemClock_Config();
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 113:Src/main.c    **** 
 114:Src/main.c    ****   /* USER CODE END SysInit */
 115:Src/main.c    **** 
 116:Src/main.c    ****   /* Initialize all configured peripherals */
 117:Src/main.c    ****   MX_GPIO_Init();
 118:Src/main.c    ****   MX_USART2_UART_Init();
 119:Src/main.c    ****   MX_I2C1_Init();
 120:Src/main.c    ****   MX_TIM1_Init();
 121:Src/main.c    ****   /* USER CODE BEGIN 2 */
 122:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 123:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 124:Src/main.c    **** 
 125:Src/main.c    ****   //TEST SEQUENCE DEMARRAGE
 126:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 6000);
 127:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 6000);
 128:Src/main.c    ****     HAL_Delay(4000);
 129:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 3000);
 130:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 3000);
 131:Src/main.c    ****     HAL_Delay(4000);
 132:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 3000);
 133:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 3000);
 134:Src/main.c    **** 
 135:Src/main.c    **** 
 136:Src/main.c    **** 
 137:Src/main.c    ****     int i = 2000;
 138:Src/main.c    ****     for (i = 3000; i< 3200; i++)
 139:Src/main.c    ****     {
 140:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, i);
 141:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, i);
 142:Src/main.c    ****         HAL_Delay(7);
 143:Src/main.c    ****     }
 144:Src/main.c    **** 
ARM GAS  /tmp/ccEUOGm2.s 			page 4


 145:Src/main.c    ****     HAL_Delay(200);
 146:Src/main.c    ****     HAL_UART_Transmit(&huart2, "Attenzion zest partiiii  ....", sizeof("Attenzion zest partiiii  ..
 147:Src/main.c    **** 
 148:Src/main.c    **** 
 149:Src/main.c    ****   /* USER CODE END 2 */
 150:Src/main.c    **** 
 151:Src/main.c    ****   /* Infinite loop */
 152:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 153:Src/main.c    ****   while (1)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     result = SD_MPU6050_Init(&hi2c1,&mpu1,SD_MPU6050_Device_0,SD_MPU6050_Accelerometer_2G,SD_MPU605
 156:Src/main.c    **** 	  //HAL_Delay(500);
 157:Src/main.c    ****   /* USER CODE END WHILE */
 158:Src/main.c    **** 	  if(result == SD_MPU6050_Result_Ok)
 159:Src/main.c    **** 	  {
 160:Src/main.c    **** 		  //SD_UART_Send(&huart1,mpu_ok,(uint16_t)15);
 161:Src/main.c    ****             //HAL_UART_Transmit(&huart2, mpu_ok, sizeof(mpu_ok), HAL_MAX_DELAY);
 162:Src/main.c    **** 	  }
 163:Src/main.c    **** 	  else
 164:Src/main.c    **** 	  {
 165:Src/main.c    **** 		  //SD_UART_Send(&huart1,mpu_not,(uint16_t)17);
 166:Src/main.c    ****             HAL_UART_Transmit(&huart2, "MPU en PLS", sizeof("MPU en PLS"), HAL_MAX_DELAY);
 167:Src/main.c    **** 	  }
 168:Src/main.c    **** 	  //HAL_Delay(20);
 169:Src/main.c    **** 	  SD_MPU6050_ReadTemperature(&hi2c1,&mpu1);
 170:Src/main.c    **** 	  float temper = mpu1.Temperature;
 171:Src/main.c    **** 	  SD_MPU6050_ReadGyroscope(&hi2c1,&mpu1);
 172:Src/main.c    **** 	  int16_t g_x = mpu1.Gyroscope_X;
 173:Src/main.c    **** 	  int16_t g_y = mpu1.Gyroscope_Y;
 174:Src/main.c    ****       int16_t g_z = mpu1.Gyroscope_Z;
 175:Src/main.c    **** 
 176:Src/main.c    **** 
 177:Src/main.c    ****       SD_MPU6050_ReadAccelerometer(&hi2c1,&mpu1);
 178:Src/main.c    **** 	  int16_t a_x = mpu1.Accelerometer_X;
 179:Src/main.c    **** 	  int16_t a_y = mpu1.Accelerometer_Y;
 180:Src/main.c    ****       int16_t a_z = mpu1.Accelerometer_Z;
 181:Src/main.c    ****       char theIntAsString[7];
 182:Src/main.c    **** 
 183:Src/main.c    ****     int16_t a_yt = (a_y/16400.0)*90;
 184:Src/main.c    ****     sprintf( theIntAsString, "%i", a_yt );
 185:Src/main.c    ****     HAL_UART_Transmit(&huart2, theIntAsString, sizeof(theIntAsString),HAL_MAX_DELAY);
 186:Src/main.c    ****     HAL_UART_Transmit(&huart2, "\r\n", sizeof("\r\n"), HAL_MAX_DELAY);
 187:Src/main.c    ****     HAL_Delay(200);
 188:Src/main.c    **** 
 189:Src/main.c    **** 
 190:Src/main.c    ****   /* USER CODE END WHILE */
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE BEGIN 3 */
 193:Src/main.c    ****     
 194:Src/main.c    **** 
 195:Src/main.c    ****     // Calcul des erreurs
 196:Src/main.c    ****     int16_t erreur = a_y;
 197:Src/main.c    ****     somme_erreur += erreur;
 198:Src/main.c    ****     delta_erreur = erreur-delta_erreur_prec;
 199:Src/main.c    ****     delta_erreur_prec = delta_erreur;
 200:Src/main.c    ****  
 201:Src/main.c    **** 
ARM GAS  /tmp/ccEUOGm2.s 			page 5


 202:Src/main.c    ****     // PID : calcul de la commande
 203:Src/main.c    ****     cmd = kp*erreur + ki*somme_erreur + kd*delta_erreur;
 204:Src/main.c    **** 
 205:Src/main.c    **** 
 206:Src/main.c    ****     HAL_UART_Transmit(&huart2, "com", sizeof("com"),HAL_MAX_DELAY);
 207:Src/main.c    ****     sprintf( theIntAsString, "%i", cmd );
 208:Src/main.c    ****     HAL_UART_Transmit(&huart2, theIntAsString, sizeof(theIntAsString),HAL_MAX_DELAY);
 209:Src/main.c    ****     HAL_UART_Transmit(&huart2, "\r\n", sizeof("\r\n"), HAL_MAX_DELAY);
 210:Src/main.c    **** 
 211:Src/main.c    **** 
 212:Src/main.c    ****     if(cmd>0)
 213:Src/main.c    ****     {
 214:Src/main.c    ****         moteur1 = 3200 + abs(cmd);
 215:Src/main.c    ****         moteur2 = 3200;
 216:Src/main.c    ****     }
 217:Src/main.c    ****     else
 218:Src/main.c    ****     {
 219:Src/main.c    ****         moteur1 = 3200;
 220:Src/main.c    ****         moteur2 = 3200 + abs(cmd);
 221:Src/main.c    ****     }
 222:Src/main.c    **** 
 223:Src/main.c    **** 
 224:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, moteur1);
 225:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, moteur2);
 226:Src/main.c    **** 
 227:Src/main.c    ****   }
 228:Src/main.c    ****   /* USER CODE END 3 */
 229:Src/main.c    **** 
 230:Src/main.c    **** }
 231:Src/main.c    **** 
 232:Src/main.c    **** /**
 233:Src/main.c    ****   * @brief System Clock Configuration
 234:Src/main.c    ****   * @retval None
 235:Src/main.c    ****   */
 236:Src/main.c    **** void SystemClock_Config(void)
 237:Src/main.c    **** {
 238:Src/main.c    **** 
 239:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 240:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 241:Src/main.c    **** 
 242:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 243:Src/main.c    ****     */
 244:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 245:Src/main.c    **** 
 246:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 247:Src/main.c    **** 
 248:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 249:Src/main.c    ****     */
 250:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 251:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 252:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 253:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 254:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 255:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 256:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 257:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 258:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  /tmp/ccEUOGm2.s 			page 6


 259:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 260:Src/main.c    ****   {
 261:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 262:Src/main.c    ****   }
 263:Src/main.c    **** 
 264:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 265:Src/main.c    ****     */
 266:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 267:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 268:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 269:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 270:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 271:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 272:Src/main.c    **** 
 273:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 276:Src/main.c    ****   }
 277:Src/main.c    **** 
 278:Src/main.c    ****     /**Configure the Systick interrupt time 
 279:Src/main.c    ****     */
 280:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 281:Src/main.c    **** 
 282:Src/main.c    ****     /**Configure the Systick 
 283:Src/main.c    ****     */
 284:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 287:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 288:Src/main.c    **** }
 289:Src/main.c    **** 
 290:Src/main.c    **** /* USER CODE BEGIN 4 */
 291:Src/main.c    **** 
 292:Src/main.c    **** /* USER CODE END 4 */
 293:Src/main.c    **** 
 294:Src/main.c    **** /**
 295:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 296:Src/main.c    ****   * @param  file: The file name as string.
 297:Src/main.c    ****   * @param  line: The line in file as a number.
 298:Src/main.c    ****   * @retval None
 299:Src/main.c    ****   */
 300:Src/main.c    **** void _Error_Handler(char *file, int line)
 301:Src/main.c    **** {
  29              		.loc 1 301 0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              	.LVL0:
  35 0000 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
  40              	.LVL1:
  41              	.L2:
 302:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /tmp/ccEUOGm2.s 			page 7


 303:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 304:Src/main.c    ****   while(1)
 305:Src/main.c    ****   {
 306:Src/main.c    ****     HAL_UART_Transmit(&huart2, "Alerte, nous avons un code rouge", sizeof("Alerte, nous avons un co
  42              		.loc 1 306 0 discriminator 1
  43 0002 084C     		ldr	r4, .L4
  44 0004 2046     		mov	r0, r4
  45 0006 0849     		ldr	r1, .L4+4
  46 0008 2122     		movs	r2, #33
  47 000a 4FF0FF33 		mov	r3, #-1
  48 000e FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL2:
 307:Src/main.c    ****     HAL_UART_Transmit(&huart2, "\r\n", sizeof("\r\n"), HAL_MAX_DELAY);
  50              		.loc 1 307 0 discriminator 1
  51 0012 2046     		mov	r0, r4
  52 0014 0549     		ldr	r1, .L4+8
  53 0016 0322     		movs	r2, #3
  54 0018 4FF0FF33 		mov	r3, #-1
  55 001c FFF7FEFF 		bl	HAL_UART_Transmit
  56              	.LVL3:
 308:Src/main.c    ****   }
  57              		.loc 1 308 0 discriminator 1
  58 0020 EFE7     		b	.L2
  59              	.L5:
  60 0022 00BF     		.align	2
  61              	.L4:
  62 0024 00000000 		.word	huart2
  63 0028 00000000 		.word	.LC0
  64 002c 24000000 		.word	.LC1
  65              		.cfi_endproc
  66              	.LFE125:
  68              		.section	.text.SystemClock_Config,"ax",%progbits
  69              		.align	2
  70              		.global	SystemClock_Config
  71              		.thumb
  72              		.thumb_func
  74              	SystemClock_Config:
  75              	.LFB124:
 237:Src/main.c    **** 
  76              		.loc 1 237 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 80
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80 0000 00B5     		push	{lr}
  81              	.LCFI1:
  82              		.cfi_def_cfa_offset 4
  83              		.cfi_offset 14, -4
  84 0002 95B0     		sub	sp, sp, #84
  85              	.LCFI2:
  86              		.cfi_def_cfa_offset 88
  87              	.LBB2:
 244:Src/main.c    **** 
  88              		.loc 1 244 0
  89 0004 0023     		movs	r3, #0
  90 0006 0193     		str	r3, [sp, #4]
  91 0008 294A     		ldr	r2, .L10
  92 000a 116C     		ldr	r1, [r2, #64]
ARM GAS  /tmp/ccEUOGm2.s 			page 8


  93 000c 41F08051 		orr	r1, r1, #268435456
  94 0010 1164     		str	r1, [r2, #64]
  95 0012 126C     		ldr	r2, [r2, #64]
  96 0014 02F08052 		and	r2, r2, #268435456
  97 0018 0192     		str	r2, [sp, #4]
  98 001a 019A     		ldr	r2, [sp, #4]
  99              	.LBE2:
 100              	.LBB3:
 246:Src/main.c    **** 
 101              		.loc 1 246 0
 102 001c 0293     		str	r3, [sp, #8]
 103 001e 254A     		ldr	r2, .L10+4
 104 0020 1168     		ldr	r1, [r2]
 105 0022 41F44041 		orr	r1, r1, #49152
 106 0026 1160     		str	r1, [r2]
 107 0028 1268     		ldr	r2, [r2]
 108 002a 02F44042 		and	r2, r2, #49152
 109 002e 0292     		str	r2, [sp, #8]
 110 0030 029A     		ldr	r2, [sp, #8]
 111              	.LBE3:
 250:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 112              		.loc 1 250 0
 113 0032 0221     		movs	r1, #2
 114 0034 0891     		str	r1, [sp, #32]
 251:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 115              		.loc 1 251 0
 116 0036 0122     		movs	r2, #1
 117 0038 0B92     		str	r2, [sp, #44]
 252:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 118              		.loc 1 252 0
 119 003a 1022     		movs	r2, #16
 120 003c 0C92     		str	r2, [sp, #48]
 253:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 121              		.loc 1 253 0
 122 003e 0E91     		str	r1, [sp, #56]
 254:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 16;
 123              		.loc 1 254 0
 124 0040 0F93     		str	r3, [sp, #60]
 255:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 125              		.loc 1 255 0
 126 0042 1092     		str	r2, [sp, #64]
 256:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 127              		.loc 1 256 0
 128 0044 4FF4A873 		mov	r3, #336
 129 0048 1193     		str	r3, [sp, #68]
 257:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 130              		.loc 1 257 0
 131 004a 0423     		movs	r3, #4
 132 004c 1293     		str	r3, [sp, #72]
 258:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 133              		.loc 1 258 0
 134 004e 1393     		str	r3, [sp, #76]
 259:Src/main.c    ****   {
 135              		.loc 1 259 0
 136 0050 08A8     		add	r0, sp, #32
 137 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 138              	.LVL4:
ARM GAS  /tmp/ccEUOGm2.s 			page 9


 139 0056 20B1     		cbz	r0, .L7
 261:Src/main.c    ****   }
 140              		.loc 1 261 0
 141 0058 1748     		ldr	r0, .L10+8
 142 005a 40F20511 		movw	r1, #261
 143 005e FFF7FEFF 		bl	_Error_Handler
 144              	.LVL5:
 145              	.L7:
 266:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 146              		.loc 1 266 0
 147 0062 0F23     		movs	r3, #15
 148 0064 0393     		str	r3, [sp, #12]
 268:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149              		.loc 1 268 0
 150 0066 0221     		movs	r1, #2
 151 0068 0491     		str	r1, [sp, #16]
 269:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 152              		.loc 1 269 0
 153 006a 0023     		movs	r3, #0
 154 006c 0593     		str	r3, [sp, #20]
 270:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155              		.loc 1 270 0
 156 006e 4FF48052 		mov	r2, #4096
 157 0072 0692     		str	r2, [sp, #24]
 271:Src/main.c    **** 
 158              		.loc 1 271 0
 159 0074 0793     		str	r3, [sp, #28]
 273:Src/main.c    ****   {
 160              		.loc 1 273 0
 161 0076 03A8     		add	r0, sp, #12
 162 0078 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 163              	.LVL6:
 164 007c 20B1     		cbz	r0, .L8
 275:Src/main.c    ****   }
 165              		.loc 1 275 0
 166 007e 0E48     		ldr	r0, .L10+8
 167 0080 40F21311 		movw	r1, #275
 168 0084 FFF7FEFF 		bl	_Error_Handler
 169              	.LVL7:
 170              	.L8:
 280:Src/main.c    **** 
 171              		.loc 1 280 0
 172 0088 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 173              	.LVL8:
 174 008c 0B4B     		ldr	r3, .L10+12
 175 008e A3FB0030 		umull	r3, r0, r3, r0
 176 0092 8009     		lsrs	r0, r0, #6
 177 0094 FFF7FEFF 		bl	HAL_SYSTICK_Config
 178              	.LVL9:
 284:Src/main.c    **** 
 179              		.loc 1 284 0
 180 0098 0420     		movs	r0, #4
 181 009a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 182              	.LVL10:
 287:Src/main.c    **** }
 183              		.loc 1 287 0
 184 009e 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccEUOGm2.s 			page 10


 185 00a2 0021     		movs	r1, #0
 186 00a4 0A46     		mov	r2, r1
 187 00a6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 188              	.LVL11:
 288:Src/main.c    **** 
 189              		.loc 1 288 0
 190 00aa 15B0     		add	sp, sp, #84
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 4
 193              		@ sp needed
 194 00ac 5DF804FB 		ldr	pc, [sp], #4
 195              	.L11:
 196              		.align	2
 197              	.L10:
 198 00b0 00380240 		.word	1073887232
 199 00b4 00700040 		.word	1073770496
 200 00b8 28000000 		.word	.LC2
 201 00bc D34D6210 		.word	274877907
 202              		.cfi_endproc
 203              	.LFE124:
 205              		.global	__aeabi_i2d
 206              		.global	__aeabi_ddiv
 207              		.global	__aeabi_dmul
 208              		.global	__aeabi_d2iz
 209              		.section	.text.main,"ax",%progbits
 210              		.align	2
 211              		.global	main
 212              		.thumb
 213              		.thumb_func
 215              	main:
 216              	.LFB123:
  84:Src/main.c    ****   /* USER CODE BEGIN 1 */
 217              		.loc 1 84 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 222              	.LCFI4:
 223              		.cfi_def_cfa_offset 32
 224              		.cfi_offset 4, -32
 225              		.cfi_offset 5, -28
 226              		.cfi_offset 6, -24
 227              		.cfi_offset 7, -20
 228              		.cfi_offset 8, -16
 229              		.cfi_offset 9, -12
 230              		.cfi_offset 10, -8
 231              		.cfi_offset 14, -4
 232 0004 86B0     		sub	sp, sp, #24
 233              	.LCFI5:
 234              		.cfi_def_cfa_offset 56
 235              	.LVL12:
 103:Src/main.c    **** 
 236              		.loc 1 103 0
 237 0006 FFF7FEFF 		bl	HAL_Init
 238              	.LVL13:
 110:Src/main.c    **** 
 239              		.loc 1 110 0
ARM GAS  /tmp/ccEUOGm2.s 			page 11


 240 000a FFF7FEFF 		bl	SystemClock_Config
 241              	.LVL14:
 117:Src/main.c    ****   MX_USART2_UART_Init();
 242              		.loc 1 117 0
 243 000e FFF7FEFF 		bl	MX_GPIO_Init
 244              	.LVL15:
 118:Src/main.c    ****   MX_I2C1_Init();
 245              		.loc 1 118 0
 246 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 247              	.LVL16:
 119:Src/main.c    ****   MX_TIM1_Init();
 248              		.loc 1 119 0
 249 0016 FFF7FEFF 		bl	MX_I2C1_Init
 250              	.LVL17:
 120:Src/main.c    ****   /* USER CODE BEGIN 2 */
 251              		.loc 1 120 0
 252 001a FFF7FEFF 		bl	MX_TIM1_Init
 253              	.LVL18:
 122:Src/main.c    ****     HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 254              		.loc 1 122 0
 255 001e 704D     		ldr	r5, .L20+8
 256 0020 2846     		mov	r0, r5
 257 0022 0021     		movs	r1, #0
 258 0024 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 259              	.LVL19:
 123:Src/main.c    **** 
 260              		.loc 1 123 0
 261 0028 2846     		mov	r0, r5
 262 002a 0421     		movs	r1, #4
 263 002c FFF7FEFF 		bl	HAL_TIM_PWM_Start
 264              	.LVL20:
 126:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 6000);
 265              		.loc 1 126 0
 266 0030 2B68     		ldr	r3, [r5]
 267 0032 41F27072 		movw	r2, #6000
 268 0036 5A63     		str	r2, [r3, #52]
 127:Src/main.c    ****     HAL_Delay(4000);
 269              		.loc 1 127 0
 270 0038 9A63     		str	r2, [r3, #56]
 128:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 3000);
 271              		.loc 1 128 0
 272 003a 4FF47A60 		mov	r0, #4000
 273 003e FFF7FEFF 		bl	HAL_Delay
 274              	.LVL21:
 129:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 3000);
 275              		.loc 1 129 0
 276 0042 2B68     		ldr	r3, [r5]
 277 0044 40F6B834 		movw	r4, #3000
 278 0048 5C63     		str	r4, [r3, #52]
 130:Src/main.c    ****     HAL_Delay(4000);
 279              		.loc 1 130 0
 280 004a 9C63     		str	r4, [r3, #56]
 131:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_1, 3000);
 281              		.loc 1 131 0
 282 004c 4FF47A60 		mov	r0, #4000
 283 0050 FFF7FEFF 		bl	HAL_Delay
 284              	.LVL22:
ARM GAS  /tmp/ccEUOGm2.s 			page 12


 132:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, 3000);
 285              		.loc 1 132 0
 286 0054 2B68     		ldr	r3, [r5]
 287 0056 5C63     		str	r4, [r3, #52]
 133:Src/main.c    **** 
 288              		.loc 1 133 0
 289 0058 9C63     		str	r4, [r3, #56]
 290              	.LVL23:
 138:Src/main.c    ****     {
 291              		.loc 1 138 0
 292 005a 07E0     		b	.L13
 293              	.LVL24:
 294              	.L14:
 140:Src/main.c    ****         __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, i);
 295              		.loc 1 140 0 discriminator 3
 296 005c 604B     		ldr	r3, .L20+8
 297 005e 1B68     		ldr	r3, [r3]
 298 0060 5C63     		str	r4, [r3, #52]
 141:Src/main.c    ****         HAL_Delay(7);
 299              		.loc 1 141 0 discriminator 3
 300 0062 9C63     		str	r4, [r3, #56]
 142:Src/main.c    ****     }
 301              		.loc 1 142 0 discriminator 3
 302 0064 0720     		movs	r0, #7
 303 0066 FFF7FEFF 		bl	HAL_Delay
 304              	.LVL25:
 138:Src/main.c    ****     {
 305              		.loc 1 138 0 discriminator 3
 306 006a 0134     		adds	r4, r4, #1
 307              	.LVL26:
 308              	.L13:
 138:Src/main.c    ****     {
 309              		.loc 1 138 0 is_stmt 0 discriminator 1
 310 006c B4F5486F 		cmp	r4, #3200
 311 0070 F4DB     		blt	.L14
 145:Src/main.c    ****     HAL_UART_Transmit(&huart2, "Attenzion zest partiiii  ....", sizeof("Attenzion zest partiiii  ..
 312              		.loc 1 145 0 is_stmt 1
 313 0072 C820     		movs	r0, #200
 314 0074 FFF7FEFF 		bl	HAL_Delay
 315              	.LVL27:
 146:Src/main.c    **** 
 316              		.loc 1 146 0
 317 0078 5A48     		ldr	r0, .L20+12
 318 007a 5B49     		ldr	r1, .L20+16
 319 007c 1E22     		movs	r2, #30
 320 007e 4FF0FF33 		mov	r3, #-1
 321 0082 FFF7FEFF 		bl	HAL_UART_Transmit
 322              	.LVL28:
  91:Src/main.c    ****     int16_t cmd = 0;
 323              		.loc 1 91 0
 324 0086 0026     		movs	r6, #0
  89:Src/main.c    ****     int16_t delta_erreur = 0;
 325              		.loc 1 89 0
 326 0088 3546     		mov	r5, r6
 327              	.LVL29:
 328              	.L18:
 329              	.LBB4:
ARM GAS  /tmp/ccEUOGm2.s 			page 13


 155:Src/main.c    **** 	  //HAL_Delay(500);
 330              		.loc 1 155 0
 331 008a 0023     		movs	r3, #0
 332 008c 0093     		str	r3, [sp]
 333 008e 5748     		ldr	r0, .L20+20
 334 0090 5749     		ldr	r1, .L20+24
 335 0092 1A46     		mov	r2, r3
 336 0094 FFF7FEFF 		bl	SD_MPU6050_Init
 337              	.LVL30:
 158:Src/main.c    **** 	  {
 338              		.loc 1 158 0
 339 0098 30B1     		cbz	r0, .L15
 166:Src/main.c    **** 	  }
 340              		.loc 1 166 0
 341 009a 5248     		ldr	r0, .L20+12
 342              	.LVL31:
 343 009c 5549     		ldr	r1, .L20+28
 344 009e 0B22     		movs	r2, #11
 345 00a0 4FF0FF33 		mov	r3, #-1
 346 00a4 FFF7FEFF 		bl	HAL_UART_Transmit
 347              	.LVL32:
 348              	.L15:
 169:Src/main.c    **** 	  float temper = mpu1.Temperature;
 349              		.loc 1 169 0
 350 00a8 504F     		ldr	r7, .L20+20
 351 00aa 514C     		ldr	r4, .L20+24
 352 00ac 3846     		mov	r0, r7
 353 00ae 2146     		mov	r1, r4
 354 00b0 FFF7FEFF 		bl	SD_MPU6050_ReadTemperature
 355              	.LVL33:
 171:Src/main.c    **** 	  int16_t g_x = mpu1.Gyroscope_X;
 356              		.loc 1 171 0
 357 00b4 3846     		mov	r0, r7
 358 00b6 2146     		mov	r1, r4
 359 00b8 FFF7FEFF 		bl	SD_MPU6050_ReadGyroscope
 360              	.LVL34:
 177:Src/main.c    **** 	  int16_t a_x = mpu1.Accelerometer_X;
 361              		.loc 1 177 0
 362 00bc 3846     		mov	r0, r7
 363 00be 2146     		mov	r1, r4
 364 00c0 FFF7FEFF 		bl	SD_MPU6050_ReadAccelerometer
 365              	.LVL35:
 179:Src/main.c    ****       int16_t a_z = mpu1.Accelerometer_Z;
 366              		.loc 1 179 0
 367 00c4 B4F80EA0 		ldrh	r10, [r4, #14]
 368              	.LVL36:
 183:Src/main.c    ****     sprintf( theIntAsString, "%i", a_yt );
 369              		.loc 1 183 0
 370 00c8 0FFA8AF4 		sxth	r4, r10
 371 00cc 2046     		mov	r0, r4
 372 00ce FFF7FEFF 		bl	__aeabi_i2d
 373              	.LVL37:
 374 00d2 41A3     		adr	r3, .L20
 375 00d4 D3E90023 		ldrd	r2, [r3]
 376 00d8 FFF7FEFF 		bl	__aeabi_ddiv
 377              	.LVL38:
 378 00dc 0022     		movs	r2, #0
ARM GAS  /tmp/ccEUOGm2.s 			page 14


 379 00de 464B     		ldr	r3, .L20+32
 380 00e0 FFF7FEFF 		bl	__aeabi_dmul
 381              	.LVL39:
 382 00e4 FFF7FEFF 		bl	__aeabi_d2iz
 383              	.LVL40:
 184:Src/main.c    ****     HAL_UART_Transmit(&huart2, theIntAsString, sizeof(theIntAsString),HAL_MAX_DELAY);
 384              		.loc 1 184 0
 385 00e8 DFF82091 		ldr	r9, .L20+52
 386 00ec 02B2     		sxth	r2, r0
 387 00ee 04A8     		add	r0, sp, #16
 388              	.LVL41:
 389 00f0 4946     		mov	r1, r9
 390 00f2 FFF7FEFF 		bl	sprintf
 391              	.LVL42:
 185:Src/main.c    ****     HAL_UART_Transmit(&huart2, "\r\n", sizeof("\r\n"), HAL_MAX_DELAY);
 392              		.loc 1 185 0
 393 00f6 3B4F     		ldr	r7, .L20+12
 394 00f8 3846     		mov	r0, r7
 395 00fa 04A9     		add	r1, sp, #16
 396 00fc 0722     		movs	r2, #7
 397 00fe 4FF0FF33 		mov	r3, #-1
 398 0102 FFF7FEFF 		bl	HAL_UART_Transmit
 399              	.LVL43:
 186:Src/main.c    ****     HAL_Delay(200);
 400              		.loc 1 186 0
 401 0106 DFF80881 		ldr	r8, .L20+56
 402 010a 3846     		mov	r0, r7
 403 010c 4146     		mov	r1, r8
 404 010e 0322     		movs	r2, #3
 405 0110 4FF0FF33 		mov	r3, #-1
 406 0114 FFF7FEFF 		bl	HAL_UART_Transmit
 407              	.LVL44:
 187:Src/main.c    **** 
 408              		.loc 1 187 0
 409 0118 C820     		movs	r0, #200
 410 011a FFF7FEFF 		bl	HAL_Delay
 411              	.LVL45:
 197:Src/main.c    ****     delta_erreur = erreur-delta_erreur_prec;
 412              		.loc 1 197 0
 413 011e 1FFA8AFA 		uxth	r10, r10
 414 0122 5544     		add	r5, r5, r10
 415              	.LVL46:
 416 0124 ADB2     		uxth	r5, r5
 417              	.LVL47:
 198:Src/main.c    ****     delta_erreur_prec = delta_erreur;
 418              		.loc 1 198 0
 419 0126 C6EB0A06 		rsb	r6, r6, r10
 420              	.LVL48:
 421 012a B6B2     		uxth	r6, r6
 422              	.LVL49:
 203:Src/main.c    **** 
 423              		.loc 1 203 0
 424 012c 07EE904A 		fmsr	s15, r4	@ int
 425 0130 F8EEE77A 		fsitos	s15, s15
 426 0134 9FED317A 		flds	s14, .L20+36
 427 0138 67EE876A 		fmuls	s13, s15, s14
 428 013c 2BB2     		sxth	r3, r5
ARM GAS  /tmp/ccEUOGm2.s 			page 15


 429 013e 07EE903A 		fmsr	s15, r3	@ int
 430 0142 F8EEE77A 		fsitos	s15, s15
 431 0146 9FED2E7A 		flds	s14, .L20+40
 432 014a 67EE877A 		fmuls	s15, s15, s14
 433 014e 36EEA77A 		fadds	s14, s13, s15
 434 0152 33B2     		sxth	r3, r6
 435 0154 07EE903A 		fmsr	s15, r3	@ int
 436 0158 F8EEE77A 		fsitos	s15, s15
 437 015c DFED296A 		flds	s13, .L20+44
 438 0160 67EEA67A 		fmuls	s15, s15, s13
 439 0164 77EE277A 		fadds	s15, s14, s15
 440 0168 FDEEE77A 		ftosizs	s15, s15
 441 016c CDED037A 		fsts	s15, [sp, #12]	@ int
 442 0170 BDF80C40 		ldrh	r4, [sp, #12]
 443              	.LVL50:
 206:Src/main.c    ****     sprintf( theIntAsString, "%i", cmd );
 444              		.loc 1 206 0
 445 0174 3846     		mov	r0, r7
 446 0176 2449     		ldr	r1, .L20+48
 447 0178 0422     		movs	r2, #4
 448 017a 4FF0FF33 		mov	r3, #-1
 449 017e FFF7FEFF 		bl	HAL_UART_Transmit
 450              	.LVL51:
 207:Src/main.c    ****     HAL_UART_Transmit(&huart2, theIntAsString, sizeof(theIntAsString),HAL_MAX_DELAY);
 451              		.loc 1 207 0
 452 0182 24B2     		sxth	r4, r4
 453 0184 04A8     		add	r0, sp, #16
 454 0186 4946     		mov	r1, r9
 455 0188 2246     		mov	r2, r4
 456 018a FFF7FEFF 		bl	sprintf
 457              	.LVL52:
 208:Src/main.c    ****     HAL_UART_Transmit(&huart2, "\r\n", sizeof("\r\n"), HAL_MAX_DELAY);
 458              		.loc 1 208 0
 459 018e 3846     		mov	r0, r7
 460 0190 04A9     		add	r1, sp, #16
 461 0192 0722     		movs	r2, #7
 462 0194 4FF0FF33 		mov	r3, #-1
 463 0198 FFF7FEFF 		bl	HAL_UART_Transmit
 464              	.LVL53:
 209:Src/main.c    **** 
 465              		.loc 1 209 0
 466 019c 3846     		mov	r0, r7
 467 019e 4146     		mov	r1, r8
 468 01a0 0322     		movs	r2, #3
 469 01a2 4FF0FF33 		mov	r3, #-1
 470 01a6 FFF7FEFF 		bl	HAL_UART_Transmit
 471              	.LVL54:
 212:Src/main.c    ****     {
 472              		.loc 1 212 0
 473 01aa 002C     		cmp	r4, #0
 474 01ac 07DD     		ble	.L16
 475              	.LBB5:
 214:Src/main.c    ****         moteur2 = 3200;
 476              		.loc 1 214 0
 477 01ae 002C     		cmp	r4, #0
 478 01b0 B8BF     		it	lt
 479 01b2 6442     		rsblt	r4, r4, #0
ARM GAS  /tmp/ccEUOGm2.s 			page 16


 480              	.LVL55:
 481 01b4 04F54864 		add	r4, r4, #3200
 482              	.LVL56:
 215:Src/main.c    ****     }
 483              		.loc 1 215 0
 484 01b8 4FF44862 		mov	r2, #3200
 485              	.LBE5:
 486 01bc 06E0     		b	.L17
 487              	.LVL57:
 488              	.L16:
 489              	.LBB6:
 220:Src/main.c    ****     }
 490              		.loc 1 220 0
 491 01be 002C     		cmp	r4, #0
 492 01c0 B8BF     		it	lt
 493 01c2 6442     		rsblt	r4, r4, #0
 494 01c4 04F54862 		add	r2, r4, #3200
 495              	.LVL58:
 219:Src/main.c    ****         moteur2 = 3200 + abs(cmd);
 496              		.loc 1 219 0
 497 01c8 4FF44864 		mov	r4, #3200
 498              	.LVL59:
 499              	.L17:
 500              	.LBE6:
 224:Src/main.c    ****     __HAL_TIM_SET_COMPARE(&htim1, TIM_CHANNEL_2, moteur2);
 501              		.loc 1 224 0
 502 01cc 044B     		ldr	r3, .L20+8
 503 01ce 1B68     		ldr	r3, [r3]
 504 01d0 5C63     		str	r4, [r3, #52]
 225:Src/main.c    **** 
 505              		.loc 1 225 0
 506 01d2 9A63     		str	r2, [r3, #56]
 507              	.LBE4:
 227:Src/main.c    ****   /* USER CODE END 3 */
 508              		.loc 1 227 0
 509 01d4 59E7     		b	.L18
 510              	.L21:
 511 01d6 00BF     		.align	3
 512              	.L20:
 513 01d8 00000000 		.word	0
 514 01dc 0004D040 		.word	1087374336
 515 01e0 00000000 		.word	htim1
 516 01e4 00000000 		.word	huart2
 517 01e8 34000000 		.word	.LC3
 518 01ec 00000000 		.word	hi2c1
 519 01f0 00000000 		.word	mpu1
 520 01f4 54000000 		.word	.LC4
 521 01f8 00805640 		.word	1079410688
 522 01fc 0AD7A33C 		.word	1017370378
 523 0200 00000000 		.word	0
 524 0204 0AD7233C 		.word	1008981770
 525 0208 64000000 		.word	.LC6
 526 020c 60000000 		.word	.LC5
 527 0210 24000000 		.word	.LC1
 528              		.cfi_endproc
 529              	.LFE123:
 531              		.comm	mpu1,28,4
ARM GAS  /tmp/ccEUOGm2.s 			page 17


 532              		.section	.rodata.str1.4,"aMS",%progbits,1
 533              		.align	2
 534              	.LC0:
 535 0000 416C6572 		.ascii	"Alerte, nous avons un code rouge\000"
 535      74652C20 
 535      6E6F7573 
 535      2061766F 
 535      6E732075 
 536 0021 000000   		.space	3
 537              	.LC1:
 538 0024 0D0A00   		.ascii	"\015\012\000"
 539 0027 00       		.space	1
 540              	.LC2:
 541 0028 5372632F 		.ascii	"Src/main.c\000"
 541      6D61696E 
 541      2E6300
 542 0033 00       		.space	1
 543              	.LC3:
 544 0034 41747465 		.ascii	"Attenzion zest partiiii  ....\000"
 544      6E7A696F 
 544      6E207A65 
 544      73742070 
 544      61727469 
 545 0052 0000     		.space	2
 546              	.LC4:
 547 0054 4D505520 		.ascii	"MPU en PLS\000"
 547      656E2050 
 547      4C5300
 548 005f 00       		.space	1
 549              	.LC5:
 550 0060 256900   		.ascii	"%i\000"
 551 0063 00       		.space	1
 552              	.LC6:
 553 0064 636F6D00 		.ascii	"com\000"
 554              		.text
 555              	.Letext0:
 556              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 557              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 558              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 559              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 560              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 561              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 562              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 563              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 564              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 565              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 566              		.file 12 "Src/sd_hal_mpu6050.h"
 567              		.file 13 "<built-in>"
 568              		.file 14 "Drivers/CMSIS/Include/core_cm4.h"
 569              		.file 15 "Inc/i2c.h"
 570              		.file 16 "Inc/tim.h"
 571              		.file 17 "Inc/usart.h"
 572              		.file 18 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 573              		.file 19 "/usr/include/newlib/stdio.h"
 574              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 575              		.file 21 "Inc/gpio.h"
ARM GAS  /tmp/ccEUOGm2.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccEUOGm2.s:21     .text._Error_Handler:0000000000000000 $t
     /tmp/ccEUOGm2.s:26     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccEUOGm2.s:62     .text._Error_Handler:0000000000000024 $d
     /tmp/ccEUOGm2.s:69     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccEUOGm2.s:74     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccEUOGm2.s:198    .text.SystemClock_Config:00000000000000b0 $d
     /tmp/ccEUOGm2.s:210    .text.main:0000000000000000 $t
     /tmp/ccEUOGm2.s:215    .text.main:0000000000000000 main
     /tmp/ccEUOGm2.s:513    .text.main:00000000000001d8 $d
                            *COM*:000000000000001c mpu1
     /tmp/ccEUOGm2.s:533    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
MX_I2C1_Init
MX_TIM1_Init
HAL_TIM_PWM_Start
HAL_Delay
SD_MPU6050_Init
SD_MPU6050_ReadTemperature
SD_MPU6050_ReadGyroscope
SD_MPU6050_ReadAccelerometer
sprintf
htim1
hi2c1
